@import 'more-styles.css';

/** {
    margin: 0;
    padding: 0;
    color: red;
}
*/

body {
    background-color: lightsteelblue;
    padding: 40px;
}

h2 {
    color: red;
    padding-bottom: 10px;
    border-bottom: 2px dotted;
}

ul {
    color: white;
    background-color: steelblue;
}

h1 {
    color: aliceblue;
    background-color: #e14607;
}

p {
    color: white;
    padding: 10px;
    background-color: blue;
}

h1 span {
    color: darkslateblue;
}

li:nth-child(2n+1) {
    color: black;
}

div:nth-of-type(2) {
    background-color: blue;
}

/*more specificity using root*/
:root {
    color: lightblue;
}

:target {
    color: red;
}

:empty {
    color: red;
}
/*([id=s2])*/
div:not(:empty) {
    background-color: blue;
}
/*Could added to text fields*/
input[type="text"]:enabled {
    background: yellow;
}

:disabled {
    background: blue;
}
/*Check state of radio buttons*/
input[type="radio"]:checked  + label{
    font-size: 22px;
    font-weight: bold;
}

/*pseudo classes - target elements that state*/
/*pseudo elements - parts of document that may not exsist as elements*/
.intro::first-line {
    color: royalblue;
    font-weight: bold;
    font-size: 32px;
}

.intro::first-letter {
    float: left;
    margin: 10px 10px;
    padding: 5px 10px;
    font-size: 100px;
    line-height: 1;
}

/*Generated content - adding to html using css before and after*/
/*must have content in here*/
/*not really inserted before or after but a part of the child?/element*/
.phone::before {
    content: "\2706";
}
.phone::after {
    content: "\2706";
}
.dload::before {
    content: url(../img/pdf.png);
    margin: 0 8px;
}
.dload::after {
    content: attr(href);
    padding-left: 10px;
    font-size: .75em;
    color: tomato;
}
.box::before {
    content: "";
    display: inline-block;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    margin: 15px 15px 0 15px;
}
.box::after {
    content: "";
    display: inline-block;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    margin: 15px 15px 0 15px;
}

/*Absolute Length Units - useful when output medium is known
    represent a physical measurement and are fixed in relation
    to each other. COnsist of physical units (in, cm, pt, pc,
    and px unit)*/

/*Numeric and Textual data Types*/
/*auto makes size equal
    inherit sets values based off parent
    */

/*Color Values w3.org color names
    rgb(0,0,0)
    rgba(0,0,0,0) 4th channel changes the opacity
    hsl(0,0,0) hue(angle in color wheel) saturation(grey to white) lightness(50% normal)
    hsla(0,0,0,0) just like rgba with alpha that changes opacity
    */
div {
    background-color: lightblue;
}


/*Font Properties
    font-family -
    serif - finishing strokes (times and georgia)
    sans - no strongs (verdana, helvetica)
    mono - same space (code examples)
    font-stacks - stack of fonts that help with fallback for font
    font-weight - thick or thin (normal/bold) (lighter/bolder)
    font-size - size of font (small/medium/large) (larger/smaller) (length units)
    font-style - (normal, italic, oblique)
    font-variant - text should be in small caps font (lower case is smaller upper case)
    */

/*Text Properties
    line-height: sets height of an entire line of text (unitless values best)
    leading - vertical space between text
    text-align: horizontal alignment of text (left-left of parent, right - right of parent, center, justify (similar to book/magazine), left default
    text-decoration: none default value
    text-indent: indents the 1st line
    text-transform: change case of text (all upper all lower, all capitalize
    white-space: how whitespace is displayed (default-normal (all whitespace is ignored), nowrap - single line, pre - renders just like markup, pre-line - ignores spaces, but does linebreaks
    pre-wrap: lines broken only at line breaks, otherwise wrap)
*/

/*Text Styles
    text-shadow: 0px 0px 0px #000 (right down blue color)
    text-overflow: need overflow property as hidden, text-overflow: clip (default value, need visible hint to show clip texted, shows elipses)
    word-wrap: allows lines to break and continue to next line with value breakword(best for links)      
*/

/*List Styles
    list-style-type: square (changes marker)
    list-style-position: default is outside, inside markers are inside content flow
    list-style-image: url('value') markers set to custom img - 
    list-style: type position and image
*/

/******************************************/
/*              BOX MODEL                 
    Block Elements-
    Inline Elements- only take as much room as it needs (anchors, 
    Padding, border, margin - Content(center) padding (surrounds content) border (outline to box) margin (exists outside of the box)
*/
